using System;using System.Collections.Generic;using System.Threading;namespace ConsoleGame2{    class Program    {        static void Main()        {            Console.WriteLine("Введите размер игрового поля");            int fieldsize = Convert.ToInt32(Console.ReadLine());            int[,] field = new int[fieldsize, fieldsize];            Console.WriteLine("Введите уровень сложности (необходимых артефактов для победы):");            Game.ArtefactWin = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Управляйте персонажем стрелками, соберите необходимое количество артефактов, чтобы сбежать от Зла\nОтбиться от Зла можно, если Ваша мощь больше");
            Console.ReadKey();            Console.Clear();
            Console.WriteLine("Прячась от стражи, вы оказываетесь в заброшенных готических катакомбах\nИз газет вы читали, что недавно здесь была поймана группа окультистов, проводившая свои тёмные обряды\nИсследуя помещения, вы заходите в большой старинный обветшалый зал\nНа стенах упоминается некое абстрактное зло, у которого нет имени\nНа одной из стен написано кровью:");            Console.ForegroundColor = ConsoleColor.DarkRed;            Console.WriteLine("Оно уже здесь.. ");            Console.ResetColor();            Console.ReadKey();            Console.Clear();
            Game.GenerateGameField(fieldsize, field);            if (Game.ArtefactWin >= Game.Allartefacts)                Game.ToMany = true;            field[Player.x, Player.y] = 5;            Evil.x = Evil.y = fieldsize - 2;            field[Evil.x, Evil.y] = 6;
            Console.SetWindowSize(Console.LargestWindowWidth,Console.LargestWindowHeight);
            Console.BufferHeight = Console.LargestWindowHeight;
            Console.BufferWidth = Console.LargestWindowWidth;
            Game.GameFieldRender(fieldsize, field);            Game.Body(fieldsize, field);            if (Game.win == true)            {                Console.ForegroundColor = ConsoleColor.Green;                Console.WriteLine("Поздравляю!\n Вы победили!");                Console.ResetColor();            }            else            {                Console.ForegroundColor = ConsoleColor.Red;                Console.WriteLine("Вы проиграли!");                Console.ResetColor();            }            Console.ReadKey();        }        class Game        {            public static bool win = false;            public static int ArtefactWin;            public static int Allartefacts = 0;            public static bool ToMany = false;            public static void GameFieldRender(int fieldsize, int[,] field)            {                for (int i = 0; i < fieldsize; i++)                {                    for (int j = 0; j < fieldsize; j++)                    {                        switch (field[i, j])                        {                            case (0):                                Console.Write('+');                                break;                            case (1):                                Console.Write('I');                                break;                            case (2):                                Console.Write('|');                                break;                            case (3):                                Console.Write('#'); //Wall                                break;                            case (4):                                Console.Write('!'); // level                                break;                            case (5):                                Console.ForegroundColor = ConsoleColor.DarkGray;                                Console.Write('X'); // GG                                Console.ResetColor();                                break;                            case (6):                                Console.ForegroundColor = ConsoleColor.DarkRed;                                Console.Write('E'); // Evil                                Console.ResetColor();                                break;                            case (9):                                Console.Write(' ');                                break;                        }                    }                    Console.Write('\n');                }            }            public static void GenerateGameField(int fieldsize, int[,] field)            {                for (int i = 0; i < fieldsize; i++)                {                    for (int j = 0; j < fieldsize; j++)                    {                        Random random = new Random();                        int GenObj = random.Next(1000);                        if (((i == 0) & (j == 0)) || ((i == fieldsize - 1) & (j == fieldsize - 1)) || (i == 0 & j == fieldsize - 1) || (j == 0 & i == fieldsize - 1))                            field[i, j] = 0; // граница +                        else if ((i == 0) || (i == fieldsize - 1))                            field[i, j] = 1; //граница                         else if ((j == 0) || (j == fieldsize - 1))                            field[i, j] = 2; // граница                        else if (GenObj % 10 == 0)                            field[i, j] = 3; // Генерация стен                        else if (GenObj % 54 == 0)                        {                            field[i, j] = 4;// Генерация лута                            Game.Allartefacts += 1;                        }                        else field[i, j] = 9; //пустые клетки                    }                }            }            public static void Body(int fieldsize, int[,] field)            {                {                    while (Game.win == false & Evil.win == false)                    {                        if (field[Player.x, Player.y] == 6)                        {                            if (Player.Level > Evil.Power)                            {                                Evil.x = Evil.y = fieldsize - 2;                                Evil.Power = Evil.Level + Evil.Power + 1;                            }                            else Evil.win = true;                        }                        Evil.Power = Evil.Level + 1;                        if (Player.Level == Game.ArtefactWin)                            Game.win = true;                        Player.PlayerMove(fieldsize, field);                        Evil.EvilMove(field);                        Console.Clear();                        Game.GameFieldRender(fieldsize, field);                        if (Game.ToMany == true)                            Game.ArtefactWin = Game.Allartefacts - Evil.Level;                        if ((Player.Level + (Game.Allartefacts - Evil.Level)) <= Game.ArtefactWin)                            Evil.win = true;                        Console.WriteLine($"Артефактов/мощь у игрока игрока {Player.Level}, Артефактов у Зла {Evil.Level}, мощь Зла {Evil.Power}");                    }                }            }        }        class Player        {            public static int x = 1;            public static int y = 1;            public static int Level = 0;            public static void PlayerMove(int fieldsize, int[,] field)            {                ConsoleKeyInfo key = Console.ReadKey();                switch (key.Key)                {                    case (ConsoleKey.RightArrow):                        {                            if (Player.y < fieldsize - 2)                                switch (field[Player.x, Player.y + 1])                                {                                    case 3:                                        break;                                    case 4:                                        {                                            Player.Level += 1;                                            field[Player.x, Player.y] = 9;                                            Player.y += 1;                                            break;                                        }                                    default:                                        {                                            field[Player.x, Player.y] = 9;                                            Player.y += 1;                                            break;                                        }                                }                            break;                        }                    case (ConsoleKey.DownArrow):                        {                            if (Player.x < fieldsize - 2)                                switch (field[Player.x + 1, Player.y])                                {                                    case 3:                                        break;                                    case 4:                                        {                                            Player.Level += 1;                                            field[Player.x, Player.y] = 9;                                            Player.x += 1;                                            break;                                        }                                    default:                                        {                                            field[Player.x, Player.y] = 9;                                            Player.x += 1;                                            break;                                        }                                }                            break;                        }                    case (ConsoleKey.LeftArrow):                        {                            if (Player.y > 1)                                switch (field[Player.x, Player.y - 1])                                {                                    case 3:                                        break;                                    case 4:                                        {                                            Player.Level += 1;                                            field[Player.x, Player.y] = 9;                                            Player.y -= 1;                                            break;                                        }                                    default:                                        {                                            field[Player.x, Player.y] = 9;                                            Player.y -= 1;                                            break;                                        }                                }                            break;                        }                    case (ConsoleKey.UpArrow):                        {                            if (Player.x > 1)                                switch (field[Player.x - 1, Player.y])                                {                                    case 3:                                        break;                                    case 4:                                        {                                            Player.Level += 1;                                            field[Player.x, Player.y] = 9;                                            Player.x -= 1;                                            break;                                        }                                    default:                                        {                                            field[Player.x, Player.y] = 9;                                            Player.x -= 1;                                            break;                                        }                                }                            break;                        }                }                field[Player.x, Player.y] = 5;            }                    }       class Evil            {                public static int Level = 0;                public static int x;                public static int y;                public static bool win = false;                public static int Power = Evil.Level + 1;                public static void EvilMove(int[,] field)                {                    if (Evil.x - Player.x > 0)                        Evil.MoveUp(field);// Up                    if (Evil.y - Player.y > 0)                        Evil.MoveLeft(field); // Left                    if (Evil.y - Player.y < 0)                        Evil.MoveRight(field);   // Right                    if (Evil.x - Player.x < 0)                        Evil.MoveDown(field); // Down                  field[Evil.x, Evil.y] = 6;                }                public static void MoveRight(int[,] field)                {                    if (Evil.y - Player.y < 0)                        switch (field[Evil.x, Evil.y + 1])                        {                            case 3:                                                             Evil.ExitWall(field);                                break;                            case 4:                                Evil.Level += 1;                                field[Evil.x, Evil.y] = 9;                                Evil.y += 1;                                break;                            default:                                field[Evil.x, Evil.y] = 9;                                Evil.y += 1;                                break;                        }                }                public static void MoveLeft(int[,] field)                {                    if (Evil.y - Player.y > 0)                        switch (field[Evil.x, Evil.y - 1])                        {                            case 3:                                Evil.ExitWall(field);                                break;                            case 4:                                Evil.Level += 1;                                field[Evil.x, Evil.y] = 9;                                Evil.y -= 1;                                break;                            default:                                field[Evil.x, Evil.y] = 9;                                Evil.y -= 1;                                break;                        }                }                public static void MoveUp(int[,] field)                {                    if (Evil.x - Player.x > 0)                        switch (field[Evil.x - 1, Evil.y])                        {                            case 3:                                Evil.ExitWall(field);                                break;                            case 4:                                Evil.Level += 1;                                field[Evil.x, Evil.y] = 9;                                Evil.x -= 1;                                break;                            default:                                field[Evil.x, Evil.y] = 9;                                Evil.x -= 1;                                break;                        }                }                public static void MoveDown(int[,] field)                {                    if (Evil.x - Player.x < 0)                        switch (field[Evil.x + 1, Evil.y])                        {                            case 3:                                Evil.ExitWall(field);                                break;                            case 4:                                Evil.Level += 1;                                field[Evil.x, Evil.y] = 9;                                Evil.x += 1;                                break;                            default:                                field[Evil.x, Evil.y] = 9;                                Evil.x += 1;                                break;                        }                }                public static void ExitWall(int[,] field)                {                    for (int i = -1; i < 2; i++)                        for (int j = -1; j < 2; j++)                        {                            if (Evil.y + j == 4)                            {                                Evil.Level += 1;                                field[Evil.x, Evil.y] = 9;                                Evil.y += j;                            }                            else if (Evil.y + j == 9)                            {                                field[Evil.x, Evil.y] = 9;                                Evil.y += j;                            }                            else if (Evil.x + j == 4)                            {                                Evil.Level += 1;                                field[Evil.x, Evil.y] = 9;                                Evil.x += j;                            }                            else if (Evil.x + j == 9)                            {                                field[Evil.x, Evil.y] = 9;                                Evil.x += j;                            }                        }                }            }        }    } 